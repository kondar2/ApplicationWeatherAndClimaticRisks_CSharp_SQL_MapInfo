#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ForMap
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="КлимРиски_18-12-13")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertВРП(ВРП instance);
    partial void UpdateВРП(ВРП instance);
    partial void DeleteВРП(ВРП instance);
    partial void InsertОпасные_Явления_В_Отраслях(Опасные_Явления_В_Отраслях instance);
    partial void UpdateОпасные_Явления_В_Отраслях(Опасные_Явления_В_Отраслях instance);
    partial void DeleteОпасные_Явления_В_Отраслях(Опасные_Явления_В_Отраслях instance);
    partial void InsertРазделы_Экономики(Разделы_Экономики instance);
    partial void UpdateРазделы_Экономики(Разделы_Экономики instance);
    partial void DeleteРазделы_Экономики(Разделы_Экономики instance);
    partial void InsertСписок_Опасных_Явлений(Список_Опасных_Явлений instance);
    partial void UpdateСписок_Опасных_Явлений(Список_Опасных_Явлений instance);
    partial void DeleteСписок_Опасных_Явлений(Список_Опасных_Явлений instance);
    partial void InsertСубъекты_РФ(Субъекты_РФ instance);
    partial void UpdateСубъекты_РФ(Субъекты_РФ instance);
    partial void DeleteСубъекты_РФ(Субъекты_РФ instance);
    partial void InsertСубъекты_Сведения(Субъекты_Сведения instance);
    partial void UpdateСубъекты_Сведения(Субъекты_Сведения instance);
    partial void DeleteСубъекты_Сведения(Субъекты_Сведения instance);
    partial void InsertСубъекты_соответствиеОЯ(Субъекты_соответствиеОЯ instance);
    partial void UpdateСубъекты_соответствиеОЯ(Субъекты_соответствиеОЯ instance);
    partial void DeleteСубъекты_соответствиеОЯ(Субъекты_соответствиеОЯ instance);
    partial void InsertФакторыСоцРиска(ФакторыСоцРиска instance);
    partial void UpdateФакторыСоцРиска(ФакторыСоцРиска instance);
    partial void DeleteФакторыСоцРиска(ФакторыСоцРиска instance);
    partial void InsertФакторыСоцРискаЗначения(ФакторыСоцРискаЗначения instance);
    partial void UpdateФакторыСоцРискаЗначения(ФакторыСоцРискаЗначения instance);
    partial void DeleteФакторыСоцРискаЗначения(ФакторыСоцРискаЗначения instance);
    partial void InsertОпасные_Явления_test2(Опасные_Явления_test2 instance);
    partial void UpdateОпасные_Явления_test2(Опасные_Явления_test2 instance);
    partial void DeleteОпасные_Явления_test2(Опасные_Явления_test2 instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ForMap.Properties.Settings.Default.КлимРиски_18_12_13ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Опасные_Явления> Опасные_Явления
		{
			get
			{
				return this.GetTable<Опасные_Явления>();
			}
		}
		
		public System.Data.Linq.Table<ВРП> ВРП
		{
			get
			{
				return this.GetTable<ВРП>();
			}
		}
		
		public System.Data.Linq.Table<Опасные_Явления_В_Отраслях> Опасные_Явления_В_Отраслях
		{
			get
			{
				return this.GetTable<Опасные_Явления_В_Отраслях>();
			}
		}
		
		public System.Data.Linq.Table<Разделы_Экономики> Разделы_Экономики
		{
			get
			{
				return this.GetTable<Разделы_Экономики>();
			}
		}
		
		public System.Data.Linq.Table<Список_Опасных_Явлений> Список_Опасных_Явлений
		{
			get
			{
				return this.GetTable<Список_Опасных_Явлений>();
			}
		}
		
		public System.Data.Linq.Table<Субъекты_РФ> Субъекты_РФ
		{
			get
			{
				return this.GetTable<Субъекты_РФ>();
			}
		}
		
		public System.Data.Linq.Table<Субъекты_Сведения> Субъекты_Сведения
		{
			get
			{
				return this.GetTable<Субъекты_Сведения>();
			}
		}
		
		public System.Data.Linq.Table<Субъекты_соответствиеОЯ> Субъекты_соответствиеОЯ
		{
			get
			{
				return this.GetTable<Субъекты_соответствиеОЯ>();
			}
		}
		
		public System.Data.Linq.Table<ФакторыСоцРиска> ФакторыСоцРиска
		{
			get
			{
				return this.GetTable<ФакторыСоцРиска>();
			}
		}
		
		public System.Data.Linq.Table<ФакторыСоцРискаЗначения> ФакторыСоцРискаЗначения
		{
			get
			{
				return this.GetTable<ФакторыСоцРискаЗначения>();
			}
		}
		
		public System.Data.Linq.Table<Опасные_Явления_test> Опасные_Явления_test
		{
			get
			{
				return this.GetTable<Опасные_Явления_test>();
			}
		}
		
		public System.Data.Linq.Table<Опасные_Явления_test2> Опасные_Явления_test2
		{
			get
			{
				return this.GetTable<Опасные_Явления_test2>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Опасные_Явления")]
	public partial class Опасные_Явления
	{
		
		private double _Номер;
		
		private System.DateTime _Дата_Начала;
		
		private System.DateTime _Дата_Окончания;
		
		private int _КоличествоОЯ;
		
		private string _Заблаговременность;
		
		private int _Номер_Явления;
		
		private System.Nullable<int> _Интенсивность_явления;
		
		private string _ИДСубъекта;
		
		private string _Дополнение;
		
		public Опасные_Явления()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер", DbType="Float NOT NULL")]
		public double Номер
		{
			get
			{
				return this._Номер;
			}
			set
			{
				if ((this._Номер != value))
				{
					this._Номер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата_Начала", DbType="Date NOT NULL")]
		public System.DateTime Дата_Начала
		{
			get
			{
				return this._Дата_Начала;
			}
			set
			{
				if ((this._Дата_Начала != value))
				{
					this._Дата_Начала = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата_Окончания", DbType="Date NOT NULL")]
		public System.DateTime Дата_Окончания
		{
			get
			{
				return this._Дата_Окончания;
			}
			set
			{
				if ((this._Дата_Окончания != value))
				{
					this._Дата_Окончания = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоОЯ", DbType="Int NOT NULL")]
		public int КоличествоОЯ
		{
			get
			{
				return this._КоличествоОЯ;
			}
			set
			{
				if ((this._КоличествоОЯ != value))
				{
					this._КоличествоОЯ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Заблаговременность", DbType="NVarChar(255)")]
		public string Заблаговременность
		{
			get
			{
				return this._Заблаговременность;
			}
			set
			{
				if ((this._Заблаговременность != value))
				{
					this._Заблаговременность = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер_Явления", DbType="Int NOT NULL")]
		public int Номер_Явления
		{
			get
			{
				return this._Номер_Явления;
			}
			set
			{
				if ((this._Номер_Явления != value))
				{
					this._Номер_Явления = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Интенсивность_явления", DbType="Int")]
		public System.Nullable<int> Интенсивность_явления
		{
			get
			{
				return this._Интенсивность_явления;
			}
			set
			{
				if ((this._Интенсивность_явления != value))
				{
					this._Интенсивность_явления = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИДСубъекта", DbType="NChar(4) NOT NULL", CanBeNull=false)]
		public string ИДСубъекта
		{
			get
			{
				return this._ИДСубъекта;
			}
			set
			{
				if ((this._ИДСубъекта != value))
				{
					this._ИДСубъекта = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дополнение", DbType="NVarChar(255)")]
		public string Дополнение
		{
			get
			{
				return this._Дополнение;
			}
			set
			{
				if ((this._Дополнение != value))
				{
					this._Дополнение = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ВРП")]
	public partial class ВРП : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ИДСубъекта;
		
		private char _Версия;
		
		private string _Отрасль;
		
		private int _Год;
		
		private System.Nullable<double> _ВРП1;
		
		private EntityRef<Разделы_Экономики> _Разделы_Экономики;
		
		private EntityRef<Субъекты_РФ> _Субъекты_РФ;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnИДСубъектаChanging(string value);
    partial void OnИДСубъектаChanged();
    partial void OnВерсияChanging(char value);
    partial void OnВерсияChanged();
    partial void OnОтрасльChanging(string value);
    partial void OnОтрасльChanged();
    partial void OnГодChanging(int value);
    partial void OnГодChanged();
    partial void OnВРП1Changing(System.Nullable<double> value);
    partial void OnВРП1Changed();
    #endregion
		
		public ВРП()
		{
			this._Разделы_Экономики = default(EntityRef<Разделы_Экономики>);
			this._Субъекты_РФ = default(EntityRef<Субъекты_РФ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИДСубъекта", DbType="NChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ИДСубъекта
		{
			get
			{
				return this._ИДСубъекта;
			}
			set
			{
				if ((this._ИДСубъекта != value))
				{
					if (this._Субъекты_РФ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnИДСубъектаChanging(value);
					this.SendPropertyChanging();
					this._ИДСубъекта = value;
					this.SendPropertyChanged("ИДСубъекта");
					this.OnИДСубъектаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Версия", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char Версия
		{
			get
			{
				return this._Версия;
			}
			set
			{
				if ((this._Версия != value))
				{
					if (this._Субъекты_РФ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnВерсияChanging(value);
					this.SendPropertyChanging();
					this._Версия = value;
					this.SendPropertyChanged("Версия");
					this.OnВерсияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Отрасль", DbType="NChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Отрасль
		{
			get
			{
				return this._Отрасль;
			}
			set
			{
				if ((this._Отрасль != value))
				{
					if (this._Разделы_Экономики.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnОтрасльChanging(value);
					this.SendPropertyChanging();
					this._Отрасль = value;
					this.SendPropertyChanged("Отрасль");
					this.OnОтрасльChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Год", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Год
		{
			get
			{
				return this._Год;
			}
			set
			{
				if ((this._Год != value))
				{
					this.OnГодChanging(value);
					this.SendPropertyChanging();
					this._Год = value;
					this.SendPropertyChanged("Год");
					this.OnГодChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ВРП", Storage="_ВРП1", DbType="Float")]
		public System.Nullable<double> ВРП1
		{
			get
			{
				return this._ВРП1;
			}
			set
			{
				if ((this._ВРП1 != value))
				{
					this.OnВРП1Changing(value);
					this.SendPropertyChanging();
					this._ВРП1 = value;
					this.SendPropertyChanged("ВРП1");
					this.OnВРП1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Разделы_Экономики_ВРП", Storage="_Разделы_Экономики", ThisKey="Отрасль", OtherKey="Раздел", IsForeignKey=true)]
		public Разделы_Экономики Разделы_Экономики
		{
			get
			{
				return this._Разделы_Экономики.Entity;
			}
			set
			{
				Разделы_Экономики previousValue = this._Разделы_Экономики.Entity;
				if (((previousValue != value) 
							|| (this._Разделы_Экономики.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Разделы_Экономики.Entity = null;
						previousValue.ВРП.Remove(this);
					}
					this._Разделы_Экономики.Entity = value;
					if ((value != null))
					{
						value.ВРП.Add(this);
						this._Отрасль = value.Раздел;
					}
					else
					{
						this._Отрасль = default(string);
					}
					this.SendPropertyChanged("Разделы_Экономики");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Субъекты_РФ_ВРП", Storage="_Субъекты_РФ", ThisKey="ИДСубъекта,Версия", OtherKey="ИДСубъекта,Версия", IsForeignKey=true)]
		public Субъекты_РФ Субъекты_РФ
		{
			get
			{
				return this._Субъекты_РФ.Entity;
			}
			set
			{
				Субъекты_РФ previousValue = this._Субъекты_РФ.Entity;
				if (((previousValue != value) 
							|| (this._Субъекты_РФ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Субъекты_РФ.Entity = null;
						previousValue.ВРП.Remove(this);
					}
					this._Субъекты_РФ.Entity = value;
					if ((value != null))
					{
						value.ВРП.Add(this);
						this._ИДСубъекта = value.ИДСубъекта;
						this._Версия = value.Версия;
					}
					else
					{
						this._ИДСубъекта = default(string);
						this._Версия = default(char);
					}
					this.SendPropertyChanged("Субъекты_РФ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Опасные_Явления_В_Отраслях")]
	public partial class Опасные_Явления_В_Отраслях : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Буква;
		
		private int _НомерЯвления;
		
		private EntityRef<Разделы_Экономики> _Разделы_Экономики;
		
		private EntityRef<Список_Опасных_Явлений> _Список_Опасных_Явлений;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnБукваChanging(string value);
    partial void OnБукваChanged();
    partial void OnНомерЯвленияChanging(int value);
    partial void OnНомерЯвленияChanged();
    #endregion
		
		public Опасные_Явления_В_Отраслях()
		{
			this._Разделы_Экономики = default(EntityRef<Разделы_Экономики>);
			this._Список_Опасных_Явлений = default(EntityRef<Список_Опасных_Явлений>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Буква", DbType="NChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Буква
		{
			get
			{
				return this._Буква;
			}
			set
			{
				if ((this._Буква != value))
				{
					if (this._Разделы_Экономики.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnБукваChanging(value);
					this.SendPropertyChanging();
					this._Буква = value;
					this.SendPropertyChanged("Буква");
					this.OnБукваChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НомерЯвления", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int НомерЯвления
		{
			get
			{
				return this._НомерЯвления;
			}
			set
			{
				if ((this._НомерЯвления != value))
				{
					if (this._Список_Опасных_Явлений.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnНомерЯвленияChanging(value);
					this.SendPropertyChanging();
					this._НомерЯвления = value;
					this.SendPropertyChanged("НомерЯвления");
					this.OnНомерЯвленияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Разделы_Экономики_Опасные_Явления_В_Отраслях", Storage="_Разделы_Экономики", ThisKey="Буква", OtherKey="Раздел", IsForeignKey=true)]
		public Разделы_Экономики Разделы_Экономики
		{
			get
			{
				return this._Разделы_Экономики.Entity;
			}
			set
			{
				Разделы_Экономики previousValue = this._Разделы_Экономики.Entity;
				if (((previousValue != value) 
							|| (this._Разделы_Экономики.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Разделы_Экономики.Entity = null;
						previousValue.Опасные_Явления_В_Отраслях.Remove(this);
					}
					this._Разделы_Экономики.Entity = value;
					if ((value != null))
					{
						value.Опасные_Явления_В_Отраслях.Add(this);
						this._Буква = value.Раздел;
					}
					else
					{
						this._Буква = default(string);
					}
					this.SendPropertyChanged("Разделы_Экономики");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Список_Опасных_Явлений_Опасные_Явления_В_Отраслях", Storage="_Список_Опасных_Явлений", ThisKey="НомерЯвления", OtherKey="Номер_Явления", IsForeignKey=true)]
		public Список_Опасных_Явлений Список_Опасных_Явлений
		{
			get
			{
				return this._Список_Опасных_Явлений.Entity;
			}
			set
			{
				Список_Опасных_Явлений previousValue = this._Список_Опасных_Явлений.Entity;
				if (((previousValue != value) 
							|| (this._Список_Опасных_Явлений.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Список_Опасных_Явлений.Entity = null;
						previousValue.Опасные_Явления_В_Отраслях.Remove(this);
					}
					this._Список_Опасных_Явлений.Entity = value;
					if ((value != null))
					{
						value.Опасные_Явления_В_Отраслях.Add(this);
						this._НомерЯвления = value.Номер_Явления;
					}
					else
					{
						this._НомерЯвления = default(int);
					}
					this.SendPropertyChanged("Список_Опасных_Явлений");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Разделы_Экономики")]
	public partial class Разделы_Экономики : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Раздел;
		
		private string _Название_Раздела;
		
		private EntitySet<ВРП> _ВРП;
		
		private EntitySet<Опасные_Явления_В_Отраслях> _Опасные_Явления_В_Отраслях;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnРазделChanging(string value);
    partial void OnРазделChanged();
    partial void OnНазвание_РазделаChanging(string value);
    partial void OnНазвание_РазделаChanged();
    #endregion
		
		public Разделы_Экономики()
		{
			this._ВРП = new EntitySet<ВРП>(new Action<ВРП>(this.attach_ВРП), new Action<ВРП>(this.detach_ВРП));
			this._Опасные_Явления_В_Отраслях = new EntitySet<Опасные_Явления_В_Отраслях>(new Action<Опасные_Явления_В_Отраслях>(this.attach_Опасные_Явления_В_Отраслях), new Action<Опасные_Явления_В_Отраслях>(this.detach_Опасные_Явления_В_Отраслях));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Раздел", DbType="NChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Раздел
		{
			get
			{
				return this._Раздел;
			}
			set
			{
				if ((this._Раздел != value))
				{
					this.OnРазделChanging(value);
					this.SendPropertyChanging();
					this._Раздел = value;
					this.SendPropertyChanged("Раздел");
					this.OnРазделChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Название_Раздела", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
		public string Название_Раздела
		{
			get
			{
				return this._Название_Раздела;
			}
			set
			{
				if ((this._Название_Раздела != value))
				{
					this.OnНазвание_РазделаChanging(value);
					this.SendPropertyChanging();
					this._Название_Раздела = value;
					this.SendPropertyChanged("Название_Раздела");
					this.OnНазвание_РазделаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Разделы_Экономики_ВРП", Storage="_ВРП", ThisKey="Раздел", OtherKey="Отрасль")]
		public EntitySet<ВРП> ВРП
		{
			get
			{
				return this._ВРП;
			}
			set
			{
				this._ВРП.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Разделы_Экономики_Опасные_Явления_В_Отраслях", Storage="_Опасные_Явления_В_Отраслях", ThisKey="Раздел", OtherKey="Буква")]
		public EntitySet<Опасные_Явления_В_Отраслях> Опасные_Явления_В_Отраслях
		{
			get
			{
				return this._Опасные_Явления_В_Отраслях;
			}
			set
			{
				this._Опасные_Явления_В_Отраслях.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ВРП(ВРП entity)
		{
			this.SendPropertyChanging();
			entity.Разделы_Экономики = this;
		}
		
		private void detach_ВРП(ВРП entity)
		{
			this.SendPropertyChanging();
			entity.Разделы_Экономики = null;
		}
		
		private void attach_Опасные_Явления_В_Отраслях(Опасные_Явления_В_Отраслях entity)
		{
			this.SendPropertyChanging();
			entity.Разделы_Экономики = this;
		}
		
		private void detach_Опасные_Явления_В_Отраслях(Опасные_Явления_В_Отраслях entity)
		{
			this.SendPropertyChanging();
			entity.Разделы_Экономики = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Список_Опасных_Явлений")]
	public partial class Список_Опасных_Явлений : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Номер_Явления;
		
		private string _Название_Опасного_Явления;
		
		private string _ЕдиницаИзмерения;
		
		private System.Nullable<double> _Площадь;
		
		private System.Nullable<double> _КоэффициентАгрессивности;
		
		private EntitySet<Опасные_Явления_В_Отраслях> _Опасные_Явления_В_Отраслях;
		
		private EntitySet<Опасные_Явления_test2> _Опасные_Явления_test2;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnНомер_ЯвленияChanging(int value);
    partial void OnНомер_ЯвленияChanged();
    partial void OnНазвание_Опасного_ЯвленияChanging(string value);
    partial void OnНазвание_Опасного_ЯвленияChanged();
    partial void OnЕдиницаИзмеренияChanging(string value);
    partial void OnЕдиницаИзмеренияChanged();
    partial void OnПлощадьChanging(System.Nullable<double> value);
    partial void OnПлощадьChanged();
    partial void OnКоэффициентАгрессивностиChanging(System.Nullable<double> value);
    partial void OnКоэффициентАгрессивностиChanged();
    #endregion
		
		public Список_Опасных_Явлений()
		{
			this._Опасные_Явления_В_Отраслях = new EntitySet<Опасные_Явления_В_Отраслях>(new Action<Опасные_Явления_В_Отраслях>(this.attach_Опасные_Явления_В_Отраслях), new Action<Опасные_Явления_В_Отраслях>(this.detach_Опасные_Явления_В_Отраслях));
			this._Опасные_Явления_test2 = new EntitySet<Опасные_Явления_test2>(new Action<Опасные_Явления_test2>(this.attach_Опасные_Явления_test2), new Action<Опасные_Явления_test2>(this.detach_Опасные_Явления_test2));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер_Явления", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Номер_Явления
		{
			get
			{
				return this._Номер_Явления;
			}
			set
			{
				if ((this._Номер_Явления != value))
				{
					this.OnНомер_ЯвленияChanging(value);
					this.SendPropertyChanging();
					this._Номер_Явления = value;
					this.SendPropertyChanged("Номер_Явления");
					this.OnНомер_ЯвленияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Название_Опасного_Явления", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Название_Опасного_Явления
		{
			get
			{
				return this._Название_Опасного_Явления;
			}
			set
			{
				if ((this._Название_Опасного_Явления != value))
				{
					this.OnНазвание_Опасного_ЯвленияChanging(value);
					this.SendPropertyChanging();
					this._Название_Опасного_Явления = value;
					this.SendPropertyChanged("Название_Опасного_Явления");
					this.OnНазвание_Опасного_ЯвленияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ЕдиницаИзмерения", DbType="NVarChar(20)")]
		public string ЕдиницаИзмерения
		{
			get
			{
				return this._ЕдиницаИзмерения;
			}
			set
			{
				if ((this._ЕдиницаИзмерения != value))
				{
					this.OnЕдиницаИзмеренияChanging(value);
					this.SendPropertyChanging();
					this._ЕдиницаИзмерения = value;
					this.SendPropertyChanged("ЕдиницаИзмерения");
					this.OnЕдиницаИзмеренияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Площадь", DbType="Float")]
		public System.Nullable<double> Площадь
		{
			get
			{
				return this._Площадь;
			}
			set
			{
				if ((this._Площадь != value))
				{
					this.OnПлощадьChanging(value);
					this.SendPropertyChanging();
					this._Площадь = value;
					this.SendPropertyChanged("Площадь");
					this.OnПлощадьChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоэффициентАгрессивности", DbType="Float")]
		public System.Nullable<double> КоэффициентАгрессивности
		{
			get
			{
				return this._КоэффициентАгрессивности;
			}
			set
			{
				if ((this._КоэффициентАгрессивности != value))
				{
					this.OnКоэффициентАгрессивностиChanging(value);
					this.SendPropertyChanging();
					this._КоэффициентАгрессивности = value;
					this.SendPropertyChanged("КоэффициентАгрессивности");
					this.OnКоэффициентАгрессивностиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Список_Опасных_Явлений_Опасные_Явления_В_Отраслях", Storage="_Опасные_Явления_В_Отраслях", ThisKey="Номер_Явления", OtherKey="НомерЯвления")]
		public EntitySet<Опасные_Явления_В_Отраслях> Опасные_Явления_В_Отраслях
		{
			get
			{
				return this._Опасные_Явления_В_Отраслях;
			}
			set
			{
				this._Опасные_Явления_В_Отраслях.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Список_Опасных_Явлений_Опасные_Явления_test2", Storage="_Опасные_Явления_test2", ThisKey="Номер_Явления", OtherKey="Номер_Явления")]
		public EntitySet<Опасные_Явления_test2> Опасные_Явления_test2
		{
			get
			{
				return this._Опасные_Явления_test2;
			}
			set
			{
				this._Опасные_Явления_test2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Опасные_Явления_В_Отраслях(Опасные_Явления_В_Отраслях entity)
		{
			this.SendPropertyChanging();
			entity.Список_Опасных_Явлений = this;
		}
		
		private void detach_Опасные_Явления_В_Отраслях(Опасные_Явления_В_Отраслях entity)
		{
			this.SendPropertyChanging();
			entity.Список_Опасных_Явлений = null;
		}
		
		private void attach_Опасные_Явления_test2(Опасные_Явления_test2 entity)
		{
			this.SendPropertyChanging();
			entity.Список_Опасных_Явлений = this;
		}
		
		private void detach_Опасные_Явления_test2(Опасные_Явления_test2 entity)
		{
			this.SendPropertyChanging();
			entity.Список_Опасных_Явлений = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Субъекты_РФ")]
	public partial class Субъекты_РФ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ИДСубъекта;
		
		private char _Версия;
		
		private string _НазСубъекта;
		
		private string _Дополнение;
		
		private string _с;
		
		private string _по;
		
		private char _Уровень;
		
		private string _Входит_в;
		
		private System.Nullable<char> _Входит_в_ур;
		
		private char _Исключения;
		
		private EntitySet<ВРП> _ВРП;
		
		private EntitySet<Субъекты_Сведения> _Субъекты_Сведения;
		
		private EntitySet<Субъекты_соответствиеОЯ> _Субъекты_соответствиеОЯ;
		
		private EntitySet<Субъекты_соответствиеОЯ> _Субъекты_соответствиеОЯ1;
		
		private EntitySet<ФакторыСоцРискаЗначения> _ФакторыСоцРискаЗначения;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnИДСубъектаChanging(string value);
    partial void OnИДСубъектаChanged();
    partial void OnВерсияChanging(char value);
    partial void OnВерсияChanged();
    partial void OnНазСубъектаChanging(string value);
    partial void OnНазСубъектаChanged();
    partial void OnДополнениеChanging(string value);
    partial void OnДополнениеChanged();
    partial void OnсChanging(string value);
    partial void OnсChanged();
    partial void OnпоChanging(string value);
    partial void OnпоChanged();
    partial void OnУровеньChanging(char value);
    partial void OnУровеньChanged();
    partial void OnВходит_вChanging(string value);
    partial void OnВходит_вChanged();
    partial void OnВходит_в_урChanging(System.Nullable<char> value);
    partial void OnВходит_в_урChanged();
    partial void OnИсключенияChanging(char value);
    partial void OnИсключенияChanged();
    #endregion
		
		public Субъекты_РФ()
		{
			this._ВРП = new EntitySet<ВРП>(new Action<ВРП>(this.attach_ВРП), new Action<ВРП>(this.detach_ВРП));
			this._Субъекты_Сведения = new EntitySet<Субъекты_Сведения>(new Action<Субъекты_Сведения>(this.attach_Субъекты_Сведения), new Action<Субъекты_Сведения>(this.detach_Субъекты_Сведения));
			this._Субъекты_соответствиеОЯ = new EntitySet<Субъекты_соответствиеОЯ>(new Action<Субъекты_соответствиеОЯ>(this.attach_Субъекты_соответствиеОЯ), new Action<Субъекты_соответствиеОЯ>(this.detach_Субъекты_соответствиеОЯ));
			this._Субъекты_соответствиеОЯ1 = new EntitySet<Субъекты_соответствиеОЯ>(new Action<Субъекты_соответствиеОЯ>(this.attach_Субъекты_соответствиеОЯ1), new Action<Субъекты_соответствиеОЯ>(this.detach_Субъекты_соответствиеОЯ1));
			this._ФакторыСоцРискаЗначения = new EntitySet<ФакторыСоцРискаЗначения>(new Action<ФакторыСоцРискаЗначения>(this.attach_ФакторыСоцРискаЗначения), new Action<ФакторыСоцРискаЗначения>(this.detach_ФакторыСоцРискаЗначения));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИДСубъекта", DbType="NChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ИДСубъекта
		{
			get
			{
				return this._ИДСубъекта;
			}
			set
			{
				if ((this._ИДСубъекта != value))
				{
					this.OnИДСубъектаChanging(value);
					this.SendPropertyChanging();
					this._ИДСубъекта = value;
					this.SendPropertyChanged("ИДСубъекта");
					this.OnИДСубъектаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Версия", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char Версия
		{
			get
			{
				return this._Версия;
			}
			set
			{
				if ((this._Версия != value))
				{
					this.OnВерсияChanging(value);
					this.SendPropertyChanging();
					this._Версия = value;
					this.SendPropertyChanged("Версия");
					this.OnВерсияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазСубъекта", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string НазСубъекта
		{
			get
			{
				return this._НазСубъекта;
			}
			set
			{
				if ((this._НазСубъекта != value))
				{
					this.OnНазСубъектаChanging(value);
					this.SendPropertyChanging();
					this._НазСубъекта = value;
					this.SendPropertyChanged("НазСубъекта");
					this.OnНазСубъектаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дополнение", DbType="NVarChar(255)")]
		public string Дополнение
		{
			get
			{
				return this._Дополнение;
			}
			set
			{
				if ((this._Дополнение != value))
				{
					this.OnДополнениеChanging(value);
					this.SendPropertyChanging();
					this._Дополнение = value;
					this.SendPropertyChanged("Дополнение");
					this.OnДополнениеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_с", DbType="NVarChar(255)")]
		public string с
		{
			get
			{
				return this._с;
			}
			set
			{
				if ((this._с != value))
				{
					this.OnсChanging(value);
					this.SendPropertyChanging();
					this._с = value;
					this.SendPropertyChanged("с");
					this.OnсChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_по", DbType="NVarChar(255)")]
		public string по
		{
			get
			{
				return this._по;
			}
			set
			{
				if ((this._по != value))
				{
					this.OnпоChanging(value);
					this.SendPropertyChanging();
					this._по = value;
					this.SendPropertyChanged("по");
					this.OnпоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Уровень", DbType="NChar(1) NOT NULL")]
		public char Уровень
		{
			get
			{
				return this._Уровень;
			}
			set
			{
				if ((this._Уровень != value))
				{
					this.OnУровеньChanging(value);
					this.SendPropertyChanging();
					this._Уровень = value;
					this.SendPropertyChanged("Уровень");
					this.OnУровеньChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Входит_в", DbType="NChar(4)")]
		public string Входит_в
		{
			get
			{
				return this._Входит_в;
			}
			set
			{
				if ((this._Входит_в != value))
				{
					this.OnВходит_вChanging(value);
					this.SendPropertyChanging();
					this._Входит_в = value;
					this.SendPropertyChanged("Входит_в");
					this.OnВходит_вChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Входит_в_ур", DbType="NChar(1)")]
		public System.Nullable<char> Входит_в_ур
		{
			get
			{
				return this._Входит_в_ур;
			}
			set
			{
				if ((this._Входит_в_ур != value))
				{
					this.OnВходит_в_урChanging(value);
					this.SendPropertyChanging();
					this._Входит_в_ур = value;
					this.SendPropertyChanged("Входит_в_ур");
					this.OnВходит_в_урChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Исключения", DbType="NChar(1) NOT NULL")]
		public char Исключения
		{
			get
			{
				return this._Исключения;
			}
			set
			{
				if ((this._Исключения != value))
				{
					this.OnИсключенияChanging(value);
					this.SendPropertyChanging();
					this._Исключения = value;
					this.SendPropertyChanged("Исключения");
					this.OnИсключенияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Субъекты_РФ_ВРП", Storage="_ВРП", ThisKey="ИДСубъекта,Версия", OtherKey="ИДСубъекта,Версия")]
		public EntitySet<ВРП> ВРП
		{
			get
			{
				return this._ВРП;
			}
			set
			{
				this._ВРП.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Субъекты_РФ_Субъекты_Сведения", Storage="_Субъекты_Сведения", ThisKey="ИДСубъекта,Версия", OtherKey="ИДСубъекта,Версия")]
		public EntitySet<Субъекты_Сведения> Субъекты_Сведения
		{
			get
			{
				return this._Субъекты_Сведения;
			}
			set
			{
				this._Субъекты_Сведения.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Субъекты_РФ_Субъекты_соответствиеОЯ", Storage="_Субъекты_соответствиеОЯ", ThisKey="ИДСубъекта,Версия", OtherKey="ИДСубъекта1,ВерсияСубъекта1")]
		public EntitySet<Субъекты_соответствиеОЯ> Субъекты_соответствиеОЯ
		{
			get
			{
				return this._Субъекты_соответствиеОЯ;
			}
			set
			{
				this._Субъекты_соответствиеОЯ.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Субъекты_РФ_Субъекты_соответствиеОЯ1", Storage="_Субъекты_соответствиеОЯ1", ThisKey="ИДСубъекта,Версия", OtherKey="ИДСубъекта2,ВерсияСубъекта2")]
		public EntitySet<Субъекты_соответствиеОЯ> Субъекты_соответствиеОЯ1
		{
			get
			{
				return this._Субъекты_соответствиеОЯ1;
			}
			set
			{
				this._Субъекты_соответствиеОЯ1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Субъекты_РФ_ФакторыСоцРискаЗначения", Storage="_ФакторыСоцРискаЗначения", ThisKey="ИДСубъекта,Версия", OtherKey="ИДСубъекта,Версия")]
		public EntitySet<ФакторыСоцРискаЗначения> ФакторыСоцРискаЗначения
		{
			get
			{
				return this._ФакторыСоцРискаЗначения;
			}
			set
			{
				this._ФакторыСоцРискаЗначения.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ВРП(ВРП entity)
		{
			this.SendPropertyChanging();
			entity.Субъекты_РФ = this;
		}
		
		private void detach_ВРП(ВРП entity)
		{
			this.SendPropertyChanging();
			entity.Субъекты_РФ = null;
		}
		
		private void attach_Субъекты_Сведения(Субъекты_Сведения entity)
		{
			this.SendPropertyChanging();
			entity.Субъекты_РФ = this;
		}
		
		private void detach_Субъекты_Сведения(Субъекты_Сведения entity)
		{
			this.SendPropertyChanging();
			entity.Субъекты_РФ = null;
		}
		
		private void attach_Субъекты_соответствиеОЯ(Субъекты_соответствиеОЯ entity)
		{
			this.SendPropertyChanging();
			entity.Субъекты_РФ = this;
		}
		
		private void detach_Субъекты_соответствиеОЯ(Субъекты_соответствиеОЯ entity)
		{
			this.SendPropertyChanging();
			entity.Субъекты_РФ = null;
		}
		
		private void attach_Субъекты_соответствиеОЯ1(Субъекты_соответствиеОЯ entity)
		{
			this.SendPropertyChanging();
			entity.Субъекты_РФ1 = this;
		}
		
		private void detach_Субъекты_соответствиеОЯ1(Субъекты_соответствиеОЯ entity)
		{
			this.SendPropertyChanging();
			entity.Субъекты_РФ1 = null;
		}
		
		private void attach_ФакторыСоцРискаЗначения(ФакторыСоцРискаЗначения entity)
		{
			this.SendPropertyChanging();
			entity.Субъекты_РФ = this;
		}
		
		private void detach_ФакторыСоцРискаЗначения(ФакторыСоцРискаЗначения entity)
		{
			this.SendPropertyChanging();
			entity.Субъекты_РФ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Субъекты_Сведения")]
	public partial class Субъекты_Сведения : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ИДСубъекта;
		
		private char _Версия;
		
		private short _Год;
		
		private System.Nullable<double> _Площадь;
		
		private System.Nullable<double> _Население;
		
		private System.Nullable<double> _ВРП;
		
		private EntityRef<Субъекты_РФ> _Субъекты_РФ;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnИДСубъектаChanging(string value);
    partial void OnИДСубъектаChanged();
    partial void OnВерсияChanging(char value);
    partial void OnВерсияChanged();
    partial void OnГодChanging(short value);
    partial void OnГодChanged();
    partial void OnПлощадьChanging(System.Nullable<double> value);
    partial void OnПлощадьChanged();
    partial void OnНаселениеChanging(System.Nullable<double> value);
    partial void OnНаселениеChanged();
    partial void OnВРПChanging(System.Nullable<double> value);
    partial void OnВРПChanged();
    #endregion
		
		public Субъекты_Сведения()
		{
			this._Субъекты_РФ = default(EntityRef<Субъекты_РФ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИДСубъекта", DbType="NChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ИДСубъекта
		{
			get
			{
				return this._ИДСубъекта;
			}
			set
			{
				if ((this._ИДСубъекта != value))
				{
					if (this._Субъекты_РФ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnИДСубъектаChanging(value);
					this.SendPropertyChanging();
					this._ИДСубъекта = value;
					this.SendPropertyChanged("ИДСубъекта");
					this.OnИДСубъектаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Версия", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char Версия
		{
			get
			{
				return this._Версия;
			}
			set
			{
				if ((this._Версия != value))
				{
					if (this._Субъекты_РФ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnВерсияChanging(value);
					this.SendPropertyChanging();
					this._Версия = value;
					this.SendPropertyChanged("Версия");
					this.OnВерсияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Год", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Год
		{
			get
			{
				return this._Год;
			}
			set
			{
				if ((this._Год != value))
				{
					this.OnГодChanging(value);
					this.SendPropertyChanging();
					this._Год = value;
					this.SendPropertyChanged("Год");
					this.OnГодChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Площадь", DbType="Float")]
		public System.Nullable<double> Площадь
		{
			get
			{
				return this._Площадь;
			}
			set
			{
				if ((this._Площадь != value))
				{
					this.OnПлощадьChanging(value);
					this.SendPropertyChanging();
					this._Площадь = value;
					this.SendPropertyChanged("Площадь");
					this.OnПлощадьChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Население", DbType="Float")]
		public System.Nullable<double> Население
		{
			get
			{
				return this._Население;
			}
			set
			{
				if ((this._Население != value))
				{
					this.OnНаселениеChanging(value);
					this.SendPropertyChanging();
					this._Население = value;
					this.SendPropertyChanged("Население");
					this.OnНаселениеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ВРП", DbType="Float")]
		public System.Nullable<double> ВРП
		{
			get
			{
				return this._ВРП;
			}
			set
			{
				if ((this._ВРП != value))
				{
					this.OnВРПChanging(value);
					this.SendPropertyChanging();
					this._ВРП = value;
					this.SendPropertyChanged("ВРП");
					this.OnВРПChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Субъекты_РФ_Субъекты_Сведения", Storage="_Субъекты_РФ", ThisKey="ИДСубъекта,Версия", OtherKey="ИДСубъекта,Версия", IsForeignKey=true)]
		public Субъекты_РФ Субъекты_РФ
		{
			get
			{
				return this._Субъекты_РФ.Entity;
			}
			set
			{
				Субъекты_РФ previousValue = this._Субъекты_РФ.Entity;
				if (((previousValue != value) 
							|| (this._Субъекты_РФ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Субъекты_РФ.Entity = null;
						previousValue.Субъекты_Сведения.Remove(this);
					}
					this._Субъекты_РФ.Entity = value;
					if ((value != null))
					{
						value.Субъекты_Сведения.Add(this);
						this._ИДСубъекта = value.ИДСубъекта;
						this._Версия = value.Версия;
					}
					else
					{
						this._ИДСубъекта = default(string);
						this._Версия = default(char);
					}
					this.SendPropertyChanged("Субъекты_РФ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Субъекты_соответствиеОЯ")]
	public partial class Субъекты_соответствиеОЯ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ИДСоотв;
		
		private string _ИДСубъекта1;
		
		private char _ВерсияСубъекта1;
		
		private string _НазСубъекта1;
		
		private System.Nullable<int> _НачалоНаблюдений;
		
		private string _ИДСубъекта2;
		
		private char _ВерсияСубъекта2;
		
		private string _НазСубъекта2;
		
		private string _Дополнительно2;
		
		private EntityRef<Субъекты_РФ> _Субъекты_РФ;
		
		private EntityRef<Субъекты_РФ> _Субъекты_РФ1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnИДСоотвChanging(int value);
    partial void OnИДСоотвChanged();
    partial void OnИДСубъекта1Changing(string value);
    partial void OnИДСубъекта1Changed();
    partial void OnВерсияСубъекта1Changing(char value);
    partial void OnВерсияСубъекта1Changed();
    partial void OnНазСубъекта1Changing(string value);
    partial void OnНазСубъекта1Changed();
    partial void OnНачалоНаблюденийChanging(System.Nullable<int> value);
    partial void OnНачалоНаблюденийChanged();
    partial void OnИДСубъекта2Changing(string value);
    partial void OnИДСубъекта2Changed();
    partial void OnВерсияСубъекта2Changing(char value);
    partial void OnВерсияСубъекта2Changed();
    partial void OnНазСубъекта2Changing(string value);
    partial void OnНазСубъекта2Changed();
    partial void OnДополнительно2Changing(string value);
    partial void OnДополнительно2Changed();
    #endregion
		
		public Субъекты_соответствиеОЯ()
		{
			this._Субъекты_РФ = default(EntityRef<Субъекты_РФ>);
			this._Субъекты_РФ1 = default(EntityRef<Субъекты_РФ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИДСоотв", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ИДСоотв
		{
			get
			{
				return this._ИДСоотв;
			}
			set
			{
				if ((this._ИДСоотв != value))
				{
					this.OnИДСоотвChanging(value);
					this.SendPropertyChanging();
					this._ИДСоотв = value;
					this.SendPropertyChanged("ИДСоотв");
					this.OnИДСоотвChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИДСубъекта1", DbType="NChar(4) NOT NULL", CanBeNull=false)]
		public string ИДСубъекта1
		{
			get
			{
				return this._ИДСубъекта1;
			}
			set
			{
				if ((this._ИДСубъекта1 != value))
				{
					if (this._Субъекты_РФ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnИДСубъекта1Changing(value);
					this.SendPropertyChanging();
					this._ИДСубъекта1 = value;
					this.SendPropertyChanged("ИДСубъекта1");
					this.OnИДСубъекта1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ВерсияСубъекта1", DbType="NChar(1) NOT NULL")]
		public char ВерсияСубъекта1
		{
			get
			{
				return this._ВерсияСубъекта1;
			}
			set
			{
				if ((this._ВерсияСубъекта1 != value))
				{
					if (this._Субъекты_РФ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnВерсияСубъекта1Changing(value);
					this.SendPropertyChanging();
					this._ВерсияСубъекта1 = value;
					this.SendPropertyChanged("ВерсияСубъекта1");
					this.OnВерсияСубъекта1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазСубъекта1", DbType="NVarChar(255)")]
		public string НазСубъекта1
		{
			get
			{
				return this._НазСубъекта1;
			}
			set
			{
				if ((this._НазСубъекта1 != value))
				{
					this.OnНазСубъекта1Changing(value);
					this.SendPropertyChanging();
					this._НазСубъекта1 = value;
					this.SendPropertyChanged("НазСубъекта1");
					this.OnНазСубъекта1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НачалоНаблюдений", DbType="Int")]
		public System.Nullable<int> НачалоНаблюдений
		{
			get
			{
				return this._НачалоНаблюдений;
			}
			set
			{
				if ((this._НачалоНаблюдений != value))
				{
					this.OnНачалоНаблюденийChanging(value);
					this.SendPropertyChanging();
					this._НачалоНаблюдений = value;
					this.SendPropertyChanged("НачалоНаблюдений");
					this.OnНачалоНаблюденийChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИДСубъекта2", DbType="NChar(4) NOT NULL", CanBeNull=false)]
		public string ИДСубъекта2
		{
			get
			{
				return this._ИДСубъекта2;
			}
			set
			{
				if ((this._ИДСубъекта2 != value))
				{
					if (this._Субъекты_РФ1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnИДСубъекта2Changing(value);
					this.SendPropertyChanging();
					this._ИДСубъекта2 = value;
					this.SendPropertyChanged("ИДСубъекта2");
					this.OnИДСубъекта2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ВерсияСубъекта2", DbType="NChar(1) NOT NULL")]
		public char ВерсияСубъекта2
		{
			get
			{
				return this._ВерсияСубъекта2;
			}
			set
			{
				if ((this._ВерсияСубъекта2 != value))
				{
					if (this._Субъекты_РФ1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnВерсияСубъекта2Changing(value);
					this.SendPropertyChanging();
					this._ВерсияСубъекта2 = value;
					this.SendPropertyChanged("ВерсияСубъекта2");
					this.OnВерсияСубъекта2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазСубъекта2", DbType="NVarChar(255)")]
		public string НазСубъекта2
		{
			get
			{
				return this._НазСубъекта2;
			}
			set
			{
				if ((this._НазСубъекта2 != value))
				{
					this.OnНазСубъекта2Changing(value);
					this.SendPropertyChanging();
					this._НазСубъекта2 = value;
					this.SendPropertyChanged("НазСубъекта2");
					this.OnНазСубъекта2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дополнительно2", DbType="NVarChar(50)")]
		public string Дополнительно2
		{
			get
			{
				return this._Дополнительно2;
			}
			set
			{
				if ((this._Дополнительно2 != value))
				{
					this.OnДополнительно2Changing(value);
					this.SendPropertyChanging();
					this._Дополнительно2 = value;
					this.SendPropertyChanged("Дополнительно2");
					this.OnДополнительно2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Субъекты_РФ_Субъекты_соответствиеОЯ", Storage="_Субъекты_РФ", ThisKey="ИДСубъекта1,ВерсияСубъекта1", OtherKey="ИДСубъекта,Версия", IsForeignKey=true)]
		public Субъекты_РФ Субъекты_РФ
		{
			get
			{
				return this._Субъекты_РФ.Entity;
			}
			set
			{
				Субъекты_РФ previousValue = this._Субъекты_РФ.Entity;
				if (((previousValue != value) 
							|| (this._Субъекты_РФ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Субъекты_РФ.Entity = null;
						previousValue.Субъекты_соответствиеОЯ.Remove(this);
					}
					this._Субъекты_РФ.Entity = value;
					if ((value != null))
					{
						value.Субъекты_соответствиеОЯ.Add(this);
						this._ИДСубъекта1 = value.ИДСубъекта;
						this._ВерсияСубъекта1 = value.Версия;
					}
					else
					{
						this._ИДСубъекта1 = default(string);
						this._ВерсияСубъекта1 = default(char);
					}
					this.SendPropertyChanged("Субъекты_РФ");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Субъекты_РФ_Субъекты_соответствиеОЯ1", Storage="_Субъекты_РФ1", ThisKey="ИДСубъекта2,ВерсияСубъекта2", OtherKey="ИДСубъекта,Версия", IsForeignKey=true)]
		public Субъекты_РФ Субъекты_РФ1
		{
			get
			{
				return this._Субъекты_РФ1.Entity;
			}
			set
			{
				Субъекты_РФ previousValue = this._Субъекты_РФ1.Entity;
				if (((previousValue != value) 
							|| (this._Субъекты_РФ1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Субъекты_РФ1.Entity = null;
						previousValue.Субъекты_соответствиеОЯ1.Remove(this);
					}
					this._Субъекты_РФ1.Entity = value;
					if ((value != null))
					{
						value.Субъекты_соответствиеОЯ1.Add(this);
						this._ИДСубъекта2 = value.ИДСубъекта;
						this._ВерсияСубъекта2 = value.Версия;
					}
					else
					{
						this._ИДСубъекта2 = default(string);
						this._ВерсияСубъекта2 = default(char);
					}
					this.SendPropertyChanged("Субъекты_РФ1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ФакторыСоцРиска")]
	public partial class ФакторыСоцРиска : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _КодФактора;
		
		private string _НазваниеФактора;
		
		private decimal _ВесФактора;
		
		private string _ЕдИзмеренияФактора;
		
		private string _СокрНазвФактора;
		
		private char _БукваФактора;
		
		private string _Применение;
		
		private string _ТребуетсяНормирование;
		
		private EntitySet<ФакторыСоцРискаЗначения> _ФакторыСоцРискаЗначения;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКодФактораChanging(string value);
    partial void OnКодФактораChanged();
    partial void OnНазваниеФактораChanging(string value);
    partial void OnНазваниеФактораChanged();
    partial void OnВесФактораChanging(decimal value);
    partial void OnВесФактораChanged();
    partial void OnЕдИзмеренияФактораChanging(string value);
    partial void OnЕдИзмеренияФактораChanged();
    partial void OnСокрНазвФактораChanging(string value);
    partial void OnСокрНазвФактораChanged();
    partial void OnБукваФактораChanging(char value);
    partial void OnБукваФактораChanged();
    partial void OnПрименениеChanging(string value);
    partial void OnПрименениеChanged();
    partial void OnТребуетсяНормированиеChanging(string value);
    partial void OnТребуетсяНормированиеChanged();
    #endregion
		
		public ФакторыСоцРиска()
		{
			this._ФакторыСоцРискаЗначения = new EntitySet<ФакторыСоцРискаЗначения>(new Action<ФакторыСоцРискаЗначения>(this.attach_ФакторыСоцРискаЗначения), new Action<ФакторыСоцРискаЗначения>(this.detach_ФакторыСоцРискаЗначения));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КодФактора", DbType="NChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string КодФактора
		{
			get
			{
				return this._КодФактора;
			}
			set
			{
				if ((this._КодФактора != value))
				{
					this.OnКодФактораChanging(value);
					this.SendPropertyChanging();
					this._КодФактора = value;
					this.SendPropertyChanged("КодФактора");
					this.OnКодФактораChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_НазваниеФактора", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string НазваниеФактора
		{
			get
			{
				return this._НазваниеФактора;
			}
			set
			{
				if ((this._НазваниеФактора != value))
				{
					this.OnНазваниеФактораChanging(value);
					this.SendPropertyChanging();
					this._НазваниеФактора = value;
					this.SendPropertyChanged("НазваниеФактора");
					this.OnНазваниеФактораChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ВесФактора", DbType="Decimal(6,2) NOT NULL")]
		public decimal ВесФактора
		{
			get
			{
				return this._ВесФактора;
			}
			set
			{
				if ((this._ВесФактора != value))
				{
					this.OnВесФактораChanging(value);
					this.SendPropertyChanging();
					this._ВесФактора = value;
					this.SendPropertyChanged("ВесФактора");
					this.OnВесФактораChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ЕдИзмеренияФактора", DbType="NVarChar(50)")]
		public string ЕдИзмеренияФактора
		{
			get
			{
				return this._ЕдИзмеренияФактора;
			}
			set
			{
				if ((this._ЕдИзмеренияФактора != value))
				{
					this.OnЕдИзмеренияФактораChanging(value);
					this.SendPropertyChanging();
					this._ЕдИзмеренияФактора = value;
					this.SendPropertyChanged("ЕдИзмеренияФактора");
					this.OnЕдИзмеренияФактораChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_СокрНазвФактора", DbType="NVarChar(50)")]
		public string СокрНазвФактора
		{
			get
			{
				return this._СокрНазвФактора;
			}
			set
			{
				if ((this._СокрНазвФактора != value))
				{
					this.OnСокрНазвФактораChanging(value);
					this.SendPropertyChanging();
					this._СокрНазвФактора = value;
					this.SendPropertyChanged("СокрНазвФактора");
					this.OnСокрНазвФактораChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_БукваФактора", DbType="NChar(1) NOT NULL")]
		public char БукваФактора
		{
			get
			{
				return this._БукваФактора;
			}
			set
			{
				if ((this._БукваФактора != value))
				{
					this.OnБукваФактораChanging(value);
					this.SendPropertyChanging();
					this._БукваФактора = value;
					this.SendPropertyChanged("БукваФактора");
					this.OnБукваФактораChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Применение", DbType="NChar(8) NOT NULL", CanBeNull=false)]
		public string Применение
		{
			get
			{
				return this._Применение;
			}
			set
			{
				if ((this._Применение != value))
				{
					this.OnПрименениеChanging(value);
					this.SendPropertyChanging();
					this._Применение = value;
					this.SendPropertyChanged("Применение");
					this.OnПрименениеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ТребуетсяНормирование", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string ТребуетсяНормирование
		{
			get
			{
				return this._ТребуетсяНормирование;
			}
			set
			{
				if ((this._ТребуетсяНормирование != value))
				{
					this.OnТребуетсяНормированиеChanging(value);
					this.SendPropertyChanging();
					this._ТребуетсяНормирование = value;
					this.SendPropertyChanged("ТребуетсяНормирование");
					this.OnТребуетсяНормированиеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ФакторыСоцРиска_ФакторыСоцРискаЗначения", Storage="_ФакторыСоцРискаЗначения", ThisKey="КодФактора", OtherKey="КодФактора")]
		public EntitySet<ФакторыСоцРискаЗначения> ФакторыСоцРискаЗначения
		{
			get
			{
				return this._ФакторыСоцРискаЗначения;
			}
			set
			{
				this._ФакторыСоцРискаЗначения.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ФакторыСоцРискаЗначения(ФакторыСоцРискаЗначения entity)
		{
			this.SendPropertyChanging();
			entity.ФакторыСоцРиска = this;
		}
		
		private void detach_ФакторыСоцРискаЗначения(ФакторыСоцРискаЗначения entity)
		{
			this.SendPropertyChanging();
			entity.ФакторыСоцРиска = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ФакторыСоцРискаЗначения")]
	public partial class ФакторыСоцРискаЗначения : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ИДСубъекта;
		
		private char _Версия;
		
		private string _КодФактора;
		
		private double _ЗначениеФактора;
		
		private short _Год;
		
		private EntityRef<Субъекты_РФ> _Субъекты_РФ;
		
		private EntityRef<ФакторыСоцРиска> _ФакторыСоцРиска;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnИДСубъектаChanging(string value);
    partial void OnИДСубъектаChanged();
    partial void OnВерсияChanging(char value);
    partial void OnВерсияChanged();
    partial void OnКодФактораChanging(string value);
    partial void OnКодФактораChanged();
    partial void OnЗначениеФактораChanging(double value);
    partial void OnЗначениеФактораChanged();
    partial void OnГодChanging(short value);
    partial void OnГодChanged();
    #endregion
		
		public ФакторыСоцРискаЗначения()
		{
			this._Субъекты_РФ = default(EntityRef<Субъекты_РФ>);
			this._ФакторыСоцРиска = default(EntityRef<ФакторыСоцРиска>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИДСубъекта", DbType="NChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ИДСубъекта
		{
			get
			{
				return this._ИДСубъекта;
			}
			set
			{
				if ((this._ИДСубъекта != value))
				{
					if (this._Субъекты_РФ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnИДСубъектаChanging(value);
					this.SendPropertyChanging();
					this._ИДСубъекта = value;
					this.SendPropertyChanged("ИДСубъекта");
					this.OnИДСубъектаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Версия", DbType="NChar(1) NOT NULL", IsPrimaryKey=true)]
		public char Версия
		{
			get
			{
				return this._Версия;
			}
			set
			{
				if ((this._Версия != value))
				{
					if (this._Субъекты_РФ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnВерсияChanging(value);
					this.SendPropertyChanging();
					this._Версия = value;
					this.SendPropertyChanged("Версия");
					this.OnВерсияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КодФактора", DbType="NChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string КодФактора
		{
			get
			{
				return this._КодФактора;
			}
			set
			{
				if ((this._КодФактора != value))
				{
					if (this._ФакторыСоцРиска.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnКодФактораChanging(value);
					this.SendPropertyChanging();
					this._КодФактора = value;
					this.SendPropertyChanged("КодФактора");
					this.OnКодФактораChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ЗначениеФактора", DbType="Float NOT NULL")]
		public double ЗначениеФактора
		{
			get
			{
				return this._ЗначениеФактора;
			}
			set
			{
				if ((this._ЗначениеФактора != value))
				{
					this.OnЗначениеФактораChanging(value);
					this.SendPropertyChanging();
					this._ЗначениеФактора = value;
					this.SendPropertyChanged("ЗначениеФактора");
					this.OnЗначениеФактораChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Год", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Год
		{
			get
			{
				return this._Год;
			}
			set
			{
				if ((this._Год != value))
				{
					this.OnГодChanging(value);
					this.SendPropertyChanging();
					this._Год = value;
					this.SendPropertyChanged("Год");
					this.OnГодChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Субъекты_РФ_ФакторыСоцРискаЗначения", Storage="_Субъекты_РФ", ThisKey="ИДСубъекта,Версия", OtherKey="ИДСубъекта,Версия", IsForeignKey=true)]
		public Субъекты_РФ Субъекты_РФ
		{
			get
			{
				return this._Субъекты_РФ.Entity;
			}
			set
			{
				Субъекты_РФ previousValue = this._Субъекты_РФ.Entity;
				if (((previousValue != value) 
							|| (this._Субъекты_РФ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Субъекты_РФ.Entity = null;
						previousValue.ФакторыСоцРискаЗначения.Remove(this);
					}
					this._Субъекты_РФ.Entity = value;
					if ((value != null))
					{
						value.ФакторыСоцРискаЗначения.Add(this);
						this._ИДСубъекта = value.ИДСубъекта;
						this._Версия = value.Версия;
					}
					else
					{
						this._ИДСубъекта = default(string);
						this._Версия = default(char);
					}
					this.SendPropertyChanged("Субъекты_РФ");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ФакторыСоцРиска_ФакторыСоцРискаЗначения", Storage="_ФакторыСоцРиска", ThisKey="КодФактора", OtherKey="КодФактора", IsForeignKey=true)]
		public ФакторыСоцРиска ФакторыСоцРиска
		{
			get
			{
				return this._ФакторыСоцРиска.Entity;
			}
			set
			{
				ФакторыСоцРиска previousValue = this._ФакторыСоцРиска.Entity;
				if (((previousValue != value) 
							|| (this._ФакторыСоцРиска.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ФакторыСоцРиска.Entity = null;
						previousValue.ФакторыСоцРискаЗначения.Remove(this);
					}
					this._ФакторыСоцРиска.Entity = value;
					if ((value != null))
					{
						value.ФакторыСоцРискаЗначения.Add(this);
						this._КодФактора = value.КодФактора;
					}
					else
					{
						this._КодФактора = default(string);
					}
					this.SendPropertyChanged("ФакторыСоцРиска");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Опасные_Явления_test")]
	public partial class Опасные_Явления_test
	{
		
		private double _Номер;
		
		private System.DateTime _Дата_Начала;
		
		private System.DateTime _Дата_Окончания;
		
		private int _КоличествоОЯ;
		
		private string _Заблаговременность;
		
		private int _Номер_Явления;
		
		private System.Nullable<int> _Интенсивность_явления;
		
		private string _ИДСубъекта;
		
		private string _Дополнение;
		
		public Опасные_Явления_test()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер", DbType="Float NOT NULL")]
		public double Номер
		{
			get
			{
				return this._Номер;
			}
			set
			{
				if ((this._Номер != value))
				{
					this._Номер = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата_Начала", DbType="Date NOT NULL")]
		public System.DateTime Дата_Начала
		{
			get
			{
				return this._Дата_Начала;
			}
			set
			{
				if ((this._Дата_Начала != value))
				{
					this._Дата_Начала = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата_Окончания", DbType="Date NOT NULL")]
		public System.DateTime Дата_Окончания
		{
			get
			{
				return this._Дата_Окончания;
			}
			set
			{
				if ((this._Дата_Окончания != value))
				{
					this._Дата_Окончания = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоОЯ", DbType="Int NOT NULL")]
		public int КоличествоОЯ
		{
			get
			{
				return this._КоличествоОЯ;
			}
			set
			{
				if ((this._КоличествоОЯ != value))
				{
					this._КоличествоОЯ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Заблаговременность", DbType="NVarChar(255)")]
		public string Заблаговременность
		{
			get
			{
				return this._Заблаговременность;
			}
			set
			{
				if ((this._Заблаговременность != value))
				{
					this._Заблаговременность = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер_Явления", DbType="Int NOT NULL")]
		public int Номер_Явления
		{
			get
			{
				return this._Номер_Явления;
			}
			set
			{
				if ((this._Номер_Явления != value))
				{
					this._Номер_Явления = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Интенсивность_явления", DbType="Int")]
		public System.Nullable<int> Интенсивность_явления
		{
			get
			{
				return this._Интенсивность_явления;
			}
			set
			{
				if ((this._Интенсивность_явления != value))
				{
					this._Интенсивность_явления = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИДСубъекта", DbType="NChar(4) NOT NULL", CanBeNull=false)]
		public string ИДСубъекта
		{
			get
			{
				return this._ИДСубъекта;
			}
			set
			{
				if ((this._ИДСубъекта != value))
				{
					this._ИДСубъекта = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дополнение", DbType="NVarChar(255)")]
		public string Дополнение
		{
			get
			{
				return this._Дополнение;
			}
			set
			{
				if ((this._Дополнение != value))
				{
					this._Дополнение = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Опасные_Явления_test2")]
	public partial class Опасные_Явления_test2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private double _Номер;
		
		private System.DateTime _Дата_Начала;
		
		private System.DateTime _Дата_Окончания;
		
		private int _КоличествоОЯ;
		
		private string _Заблаговременность;
		
		private int _Номер_Явления;
		
		private System.Nullable<int> _Интенсивность_явления;
		
		private string _ИДСубъекта;
		
		private string _Дополнение;
		
		private EntityRef<Список_Опасных_Явлений> _Список_Опасных_Явлений;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnНомерChanging(double value);
    partial void OnНомерChanged();
    partial void OnДата_НачалаChanging(System.DateTime value);
    partial void OnДата_НачалаChanged();
    partial void OnДата_ОкончанияChanging(System.DateTime value);
    partial void OnДата_ОкончанияChanged();
    partial void OnКоличествоОЯChanging(int value);
    partial void OnКоличествоОЯChanged();
    partial void OnЗаблаговременностьChanging(string value);
    partial void OnЗаблаговременностьChanged();
    partial void OnНомер_ЯвленияChanging(int value);
    partial void OnНомер_ЯвленияChanged();
    partial void OnИнтенсивность_явленияChanging(System.Nullable<int> value);
    partial void OnИнтенсивность_явленияChanged();
    partial void OnИДСубъектаChanging(string value);
    partial void OnИДСубъектаChanged();
    partial void OnДополнениеChanging(string value);
    partial void OnДополнениеChanged();
    #endregion
		
		public Опасные_Явления_test2()
		{
			this._Список_Опасных_Явлений = default(EntityRef<Список_Опасных_Явлений>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер", DbType="Float NOT NULL")]
		public double Номер
		{
			get
			{
				return this._Номер;
			}
			set
			{
				if ((this._Номер != value))
				{
					this.OnНомерChanging(value);
					this.SendPropertyChanging();
					this._Номер = value;
					this.SendPropertyChanged("Номер");
					this.OnНомерChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата_Начала", DbType="Date NOT NULL")]
		public System.DateTime Дата_Начала
		{
			get
			{
				return this._Дата_Начала;
			}
			set
			{
				if ((this._Дата_Начала != value))
				{
					this.OnДата_НачалаChanging(value);
					this.SendPropertyChanging();
					this._Дата_Начала = value;
					this.SendPropertyChanged("Дата_Начала");
					this.OnДата_НачалаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата_Окончания", DbType="Date NOT NULL")]
		public System.DateTime Дата_Окончания
		{
			get
			{
				return this._Дата_Окончания;
			}
			set
			{
				if ((this._Дата_Окончания != value))
				{
					this.OnДата_ОкончанияChanging(value);
					this.SendPropertyChanging();
					this._Дата_Окончания = value;
					this.SendPropertyChanged("Дата_Окончания");
					this.OnДата_ОкончанияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КоличествоОЯ", DbType="Int NOT NULL")]
		public int КоличествоОЯ
		{
			get
			{
				return this._КоличествоОЯ;
			}
			set
			{
				if ((this._КоличествоОЯ != value))
				{
					this.OnКоличествоОЯChanging(value);
					this.SendPropertyChanging();
					this._КоличествоОЯ = value;
					this.SendPropertyChanged("КоличествоОЯ");
					this.OnКоличествоОЯChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Заблаговременность", DbType="NVarChar(255)")]
		public string Заблаговременность
		{
			get
			{
				return this._Заблаговременность;
			}
			set
			{
				if ((this._Заблаговременность != value))
				{
					this.OnЗаблаговременностьChanging(value);
					this.SendPropertyChanging();
					this._Заблаговременность = value;
					this.SendPropertyChanged("Заблаговременность");
					this.OnЗаблаговременностьChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер_Явления", DbType="Int NOT NULL")]
		public int Номер_Явления
		{
			get
			{
				return this._Номер_Явления;
			}
			set
			{
				if ((this._Номер_Явления != value))
				{
					if (this._Список_Опасных_Явлений.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnНомер_ЯвленияChanging(value);
					this.SendPropertyChanging();
					this._Номер_Явления = value;
					this.SendPropertyChanged("Номер_Явления");
					this.OnНомер_ЯвленияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Интенсивность_явления", DbType="Int")]
		public System.Nullable<int> Интенсивность_явления
		{
			get
			{
				return this._Интенсивность_явления;
			}
			set
			{
				if ((this._Интенсивность_явления != value))
				{
					this.OnИнтенсивность_явленияChanging(value);
					this.SendPropertyChanging();
					this._Интенсивность_явления = value;
					this.SendPropertyChanged("Интенсивность_явления");
					this.OnИнтенсивность_явленияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИДСубъекта", DbType="NChar(4) NOT NULL", CanBeNull=false)]
		public string ИДСубъекта
		{
			get
			{
				return this._ИДСубъекта;
			}
			set
			{
				if ((this._ИДСубъекта != value))
				{
					this.OnИДСубъектаChanging(value);
					this.SendPropertyChanging();
					this._ИДСубъекта = value;
					this.SendPropertyChanged("ИДСубъекта");
					this.OnИДСубъектаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дополнение", DbType="NVarChar(255)")]
		public string Дополнение
		{
			get
			{
				return this._Дополнение;
			}
			set
			{
				if ((this._Дополнение != value))
				{
					this.OnДополнениеChanging(value);
					this.SendPropertyChanging();
					this._Дополнение = value;
					this.SendPropertyChanged("Дополнение");
					this.OnДополнениеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Список_Опасных_Явлений_Опасные_Явления_test2", Storage="_Список_Опасных_Явлений", ThisKey="Номер_Явления", OtherKey="Номер_Явления", IsForeignKey=true)]
		public Список_Опасных_Явлений Список_Опасных_Явлений
		{
			get
			{
				return this._Список_Опасных_Явлений.Entity;
			}
			set
			{
				Список_Опасных_Явлений previousValue = this._Список_Опасных_Явлений.Entity;
				if (((previousValue != value) 
							|| (this._Список_Опасных_Явлений.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Список_Опасных_Явлений.Entity = null;
						previousValue.Опасные_Явления_test2.Remove(this);
					}
					this._Список_Опасных_Явлений.Entity = value;
					if ((value != null))
					{
						value.Опасные_Явления_test2.Add(this);
						this._Номер_Явления = value.Номер_Явления;
					}
					else
					{
						this._Номер_Явления = default(int);
					}
					this.SendPropertyChanged("Список_Опасных_Явлений");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
